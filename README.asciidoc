:toc:
:toc-placement!:
:toc-title!:
ifdef::env-github[]
:tip-caption: :bulb:
:note-caption: :information_source:
:important-caption: :heavy_exclamation_mark:
:caution-caption: :fire:
:warning-caption: :warning:
endif::[]


= sierra-record-id

Makes, parses, converts and validates the various kinds of identifying a record in Sierra.

toc::[]


== How to use

[source,bash]
npm install 'SydneyUniLibrary/sierra-record-id#v0.1'

[source,js]
const { convert, convertAsync, make, parse, validate, RecordIdKind } = require('@sydneyunilibrary/sierra-record-id')


== API

* link:docs/convert.asciidoc[convert]
* link:docs/convert-async.asciidoc[convertAsync] ⚠️ NOT IMPLEMENTED
* link:docs/detect.asciidoc[detect]
* link:docs/make.asciidoc[make]
* link:docs/parse.asciidoc[parse]
* link:docs/validate.asciidoc[validate]


== How to set up for virtual records

If you need to converting to or from database ids for virtual records, you will need to set up access to the Sierra
database. Follow the instruction on https://github.com/SydneyUniLibrary/sierra-db-as-promised#how-to-use[how to use sierra-db-as-promised].
If you don't do this, then `sierra-record-id` will throw an error if you try to translate to or from the database id
for a virtual record.


== How to set up for Sierra API URLs

If you need to convert to absolute API URLs you will need to configure Sierra's host name. You do this in a way that is
compatible with https://github.com/SydneyUniLibrary/sierra-api-as-promised[sierra-api-as-promised].
In other words, if you have already set up `sierra-api-as-promised` you are already set up for using Sierra API URIs
with `sierra-record-id`.

At a minimum, you need to set `SIERRA_API_HOST` in your process's environment.

You can do that in any manner you choose. However if you create a `.env` file in the root directory of your project like
the following, `sierra-record-id` will read it and set up your process's environment for you.

[source]
SIERRA_API_HOST=sierra.library.edu

[NOTE]
`SIERRA_API_HOST` needs to be the name of Sierra's application server, and not Sierra's database server.


== Kinds of records id

`sierra-record-id` uses the following terminology/nomenclature to refer to the different kinds of record id in Sierra.

link:docs/kind.asciidoc[More details]

[options="header"]
|===
| Term                | `RecordIdKind`        | Example            | Virtual record example
| Record number       | `RECORD_NUMBER`       | `3696836`          | `587634@abcde`
| Weak record key     | `WEAK_RECORD_KEY`     | `i3696836`         | `i587634@abcde`
| Strong record key   | `STRONG_RECORD_KEY`   | `i36968365`        | `i5876345@abcde`
| Database id         | `DATABASE_ID`         | `450975262916`     | `28192594886437`
| Relative v4 API URL | `RELATIVE_V4_API_URL` | `v4/items/3696836` | `v4/items/587634@abcde`
| Absolute v4 API URL
| `ABSOLUTE_V4_API_URL`
| `https://sierra.library.edu/iii/sierra-api/v4/items/3696836`
| `https://sierra.library.edu/iii/sierra-api/v4/items/587634@abcde`
|===

There is an additional `RecordIdKind` not mention in the table above, which is `AMBIGUOUS_RECORD_KEY`.
`detect` returns `AMBIGUOUS_RECORD_KEY` if it cannot determine if a record key is weak or strong.


== License

Copyright (c) 2017  The University of Sydney Library

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
